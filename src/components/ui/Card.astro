---
interface Props {
	image: string;
	title: string;
	subtitle?: string;
	description: string;
	categories?: string[];
	buttonText: string;
	buttonLink: string;
	styles?: {
		container?: string;
		imageContainer?: string;
		contentContainer?: string;
		title?: string;
		subtitle?: string;
		description?: string;
		button?: string;
	};
}

const {
	image,
	title,
	subtitle,
	description,
	categories,
	buttonText,
	buttonLink,
	styles = {},
} = Astro.props;
---

<div
	class={`overflow-hidden rounded-lg bg-[#3C3C3C] text-white flex flex-col ${
		styles.container || ""
	}`}
>
	<div
		class={`aspect-video w-full overflow-hidden ${styles.imageContainer || ""}`}
	>
		<div class="h-48 bg-white flex items-center justify-center">
			<img src={image && "https://placehold.co/600x400"} alt={title} />
		</div>
	</div>
	<div class={`p-6 ${styles.contentContainer || ""}`}>
		<div class="flex gap-2">
			{
				categories?.map((category) => (
					<span class="bg-[#F3F4F6] text-black inline-block mb-3 text-[12px] rounded-full px-2 font-medium">
						{category}
					</span>
				))
			}
		</div>
		<div class="mb-2">
			<h3 class={`text-xl font-bold ${styles.title || ""}`}>{title}</h3>
			<p class={`text-gray-400 text-sm ${styles.subtitle || ""}`}>
				{subtitle}
			</p>
		</div>
	</div>
	<div class="px-6 pb-4 flex-grow">
		<p class={`${styles.description || ""}`}>{description}</p>
	</div>

	<div class="px-6 pb-6">
		<a
			href={buttonLink}
			class={`cursor-pointer inline-block text-center w-full rounded-md py-2 px-4 bg-black transition-all duration-200 transform hover:scale-105 hover:translate-y-[-1px] active:translate-y-[1px] ${
				styles.button || ""
			}`}
		>
			{buttonText}
		</a>
	</div>
</div>
